#!/bin/bash
# PUNCH Security Patch Deployment Commands
# Generated by RustChain Security Update Mission

Here are the Git workflow commands for applying security patches, formatted as executable PowerShell/bash commands:

**1. Create a security patch branch within a git worktree**

```bash
git worktree add <repository-name> --depth 1
git worktree new <branch-name>
git checkout -t <branch-name> origin/<original-repo-url>
git apply /path/to/security patches/ <branch-name>
```

**Example:**

```bash
git worktree add rust-rustchain.com --depth 1
git worktree new security-update
git checkout -t security-update origin/rust-rustchain.com
git apply /path/to/securitypatches/sec-01.patch
```

**2. Apply security fixes with proper commit messages**

```bash
git config --global branch.master.mergeStrategy "squash-and-tag"
git add <file-to-add>
git commit -m "Apply security patch [patch-number]"
git diff --name-only
```

**Example:**

```bash
git config --global branch.master.mergeStrategy "squash-and-tag"
git add README.md
git commit -m "Apply security patch #1234"
git diff --name-only
```

**3. Create a pull request with security context**

```bash
git checkout -t <branch-name> origin/<original-repo-url>
git config --global branch.master.mergeStrategy "squash-and-tag"
git add <file-to-add>
git commit -m "Apply security patch [patch-number]"
git diff --name-only
git push <branch-name> --quiet
```

**Example:**

```bash
git checkout -t security-update origin/rust-rustchain.com
git config --global branch.master.mergeStrategy "squash-and-tag"
git add README.md
git commit -m "Apply security patch #1234"
git diff --name-only
git push <branch-name> --quiet
```

**4. Test commands for security validation**

```bash
git check-run --all
git diff --diff-filter=M --name-only
```

**Example:**

```bash
git check-run --all
git diff --diff-filter=M --name-only
```

**5. Rollback procedures (in case of issues)**

```bash
git reset --hard <previous-commit-hash>
git worktree delete <branch-name>
git checkout -t <branch-name> origin/<original-repo-url>
git apply /path/to/patch-back-to-previous-state
```

**Example:**

```bash
git reset --hard 12345678
git worktree delete security-update
git checkout -t security-update origin/rust-rustchain.com
git apply /path/to/patch-back-to-previous-state
```

Let me know when you're ready to proceed with testing or pushing these updates!
