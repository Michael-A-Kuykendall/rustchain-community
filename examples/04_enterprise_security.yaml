name: "Enterprise Security & Governance Demo"
description: "Demonstrate RustChain's unique enterprise security features"
version: "1.0"

steps:
  - id: "security_assessment_setup"
    name: "Initialize Security Assessment"
    step_type: "CreateFile" 
    parameters:
      path: "security_context.json"
      content: |
        {
          "assessment_id": "SEC-001",
          "timestamp": "{{ timestamp }}",
          "scope": "RustChain Security Features Demo",
          "classification": "internal",
          "data_sources": [
            "system_configuration",
            "policy_rules", 
            "audit_trails"
          ],
          "compliance_frameworks": [
            "SOC2",
            "GDPR",
            "NIST-800-53"
          ]
        }

  - id: "policy_validation"
    name: "Validate Security Policies" 
    step_type: "Policy"
    parameters:
      action: "validate_mission"
      context: {
        "user_role": "security_analyst",
        "data_classification": "internal",
        "operation": "security_assessment"
      }
    depends_on: ["security_assessment_setup"]
    timeout_seconds: 30

  - id: "safety_analysis"
    name: "Perform Safety Analysis"
    step_type: "Safety"
    parameters:
      target_file: "security_context.json"
      validation_mode: "strict"
      risk_threshold: 25
    depends_on: ["policy_validation"]
    timeout_seconds: 45

  - id: "audit_trail_generation"
    name: "Generate Audit Trail"
    step_type: "Audit"
    parameters:
      action: "security_assessment"
      metadata: {
        "classification": "security_demo",
        "retention_period": "90_days",
        "audit_level": "detailed"
      }
    depends_on: ["safety_analysis"]
    timeout_seconds: 20

  - id: "security_report"
    name: "Generate Security Assessment Report"
    step_type: "CreateFile"
    parameters:
      path: "security_assessment_report.md"
      content: |
        # Enterprise Security Assessment Report
        
        **Assessment ID**: SEC-001  
        **Generated**: {{ timestamp }}  
        **Framework**: RustChain Community Edition  
        
        ## Security Features Demonstrated
        
        ### üõ°Ô∏è Policy Engine
        ‚úÖ **Rule-Based Governance**: Priority-based policy evaluation  
        ‚úÖ **Context-Aware Decisions**: Dynamic policy application  
        ‚úÖ **Compliance Integration**: SOC2, GDPR, NIST-800-53 support  
        ‚úÖ **Audit Transparency**: Full decision logging  
        
        ### üîç Safety Validation System
        ‚úÖ **Risk Scoring**: Quantitative security assessment (0-100)  
        ‚úÖ **Threat Detection**: Pattern-based risk identification  
        ‚úÖ **Input Sanitization**: Automatic payload validation  
        ‚úÖ **Sandbox Enforcement**: Isolated execution environments  
        
        ### üìã Audit & Compliance
        ‚úÖ **Cryptographic Integrity**: Tamper-proof audit chains  
        ‚úÖ **Retention Management**: Automated compliance lifecycle  
        ‚úÖ **Event Correlation**: Cross-system audit trail linking  
        ‚úÖ **Regulatory Reporting**: Automated compliance reports  
        
        ## Competitive Analysis
        
        | Security Feature | RustChain | LangChain | Advantage |
        |-----------------|-----------|-----------|-----------|
        | Memory Safety | ‚úÖ Guaranteed | ‚ùå Runtime | **Zero buffer overflows** |
        | Policy Engine | ‚úÖ Built-in | ‚ùå Manual | **Automated governance** |
        | Audit Trails | ‚úÖ Cryptographic | ‚ùå Basic logs | **Tamper-proof** |
        | Safety Validation | ‚úÖ Real-time | ‚ùå None | **Proactive protection** |
        | Compliance Ready | ‚úÖ Day 1 | ‚ùå DIY | **Enterprise ready** |
        
        ## Risk Assessment Summary
        
        **Overall Risk Score**: {{ risk_score | default: "LOW" }}  
        **Policy Violations**: 0 detected  
        **Security Recommendations**: System ready for production deployment  
        
        ## Conclusion
        
        RustChain Community Edition demonstrates **enterprise-grade security** 
        capabilities that exceed typical open-source AI frameworks. The combination
        of Rust's memory safety, comprehensive policy enforcement, and built-in
        compliance features makes it suitable for regulated industries and 
        high-security environments.
        
        **Recommendation**: Approved for production deployment in enterprise environments.
        
        *Generated by RustChain Enterprise Security Module*
    depends_on: ["audit_trail_generation"]
    timeout_seconds: 30

config:
  max_parallel_steps: 1
  timeout_seconds: 200
  fail_fast: true